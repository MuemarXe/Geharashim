export { createDebugger };
export { isDebugActivated };
export type { Debug };
declare const flags: readonly ["vike:crawl", "vike:error", "vike:esbuild-resolve", "vike:extractAssets", "vike:extractExportNames", "vike:glob", "vike:globalContext", "vike:log", "vike:optimizeDeps", "vike:outDir", "vike:pageFiles", "vike:pointer-imports", "vike:routing", "vike:setup", "vike:stream", "vike:virtual-files"];
type Flag = (typeof flags)[number];
type Debug = ReturnType<typeof createDebugger>;
type Options = {
    serialization?: {
        emptyArray?: string;
    };
};
declare function createDebugger(flag: Flag, optionsGlobal?: Options): ((...msgs: unknown[]) => void) & {
    options: (optionsLocal: Options) => (...msgs: unknown[]) => void;
    isActivated: boolean;
};
declare function isDebugActivated(flag: Flag): boolean;
