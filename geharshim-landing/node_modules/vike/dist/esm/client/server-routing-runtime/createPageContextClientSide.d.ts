export { createPageContextClientSide };
declare function createPageContextClientSide(): Promise<{
    globalContext: {
        isGlobalContext: true;
        _virtualFileExports: unknown;
        _pageFilesAll: import("../../shared/getPageFiles.js").PageFile[];
        _pageConfigs: import("../../__internal/index.js").PageConfig[];
        _pageConfigGlobal: import("../../shared/page-configs/PageConfig.js").PageConfigGlobalRuntime;
        _allPageIds: string[];
        config: import("../../types/index.js").ConfigResolved;
        pages: import("../../shared/page-configs/getPageConfigUserFriendly.js").PageConfigsUserFriendly;
    } & {
        isClientSide: true;
    } & object;
    _pageFilesAll: import("../../shared/getPageFiles.js").PageFile[];
    _pageConfigs: import("../../__internal/index.js").PageConfig[];
    _pageConfigGlobal: import("../../shared/page-configs/PageConfig.js").PageConfigGlobalRuntime;
    _allPageIds: string[];
    isPrerendering: boolean;
    isClientSide: boolean;
    isHydration: true;
    isBackwardNavigation: null;
    _hasPageContextFromServer: true;
    _hasPageContextFromClient: false;
} & {
    pageId: string;
    routeParams: Record<string, string>;
} & import("../../shared/getPageFiles.js").PageConfigUserFriendlyOld & {
    _pageFilesLoaded: import("../../shared/getPageFiles.js").PageFile[];
} & {
    config: import("../../types/index.js").ConfigResolved;
    _source: import("../../shared/page-configs/getPageConfigUserFriendly.js").Source;
    _sources: import("../../shared/page-configs/getPageConfigUserFriendly.js").Sources;
    _from: import("../../shared/page-configs/getPageConfigUserFriendly.js").From;
    isPageContext: true;
}>;
