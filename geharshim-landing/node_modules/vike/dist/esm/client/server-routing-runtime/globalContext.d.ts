export { getGlobalContextClientInternal };
export type { GlobalContextClientWithServerRouting };
import type { GlobalContextSharedPublic } from '../../shared/createGlobalContextShared.js';
type GlobalContextClientWithServerRouting = GlobalContextSharedPublic & Pick<GlobalContextClientInternal, 'isClientSide'> & Vike.GlobalContext & Vike.GlobalContextClient & {};
type GlobalContextClientInternal = Awaited<ReturnType<typeof getGlobalContextClientInternal>>;
declare const getGlobalContextClientInternal: () => Promise<{
    isGlobalContext: true;
    _virtualFileExports: unknown;
    _pageFilesAll: import("../../shared/getPageFiles.js").PageFile[];
    _pageConfigs: import("../../__internal/index.js").PageConfig[];
    _pageConfigGlobal: import("../../shared/page-configs/PageConfig.js").PageConfigGlobalRuntime;
    _allPageIds: string[];
    config: import("../../types/index.js").ConfigResolved;
    pages: import("../../shared/page-configs/getPageConfigUserFriendly.js").PageConfigsUserFriendly;
} & {
    isClientSide: true;
} & object>;
